# Reading C:/altera/13.0sp1/modelsim_ase/tcl/vsim/pref.tcl 
# do somadorbits_run_msim_rtl_vhdl.do 
# if {[file exists rtl_work]} {
# 	vdel -lib rtl_work -all
# }
# vlib rtl_work
# vmap work rtl_work
# Copying C:\altera\13.0sp1\modelsim_ase\win32aloem/../modelsim.ini to modelsim.ini
# Modifying modelsim.ini
# ** Warning: Copied C:\altera\13.0sp1\modelsim_ase\win32aloem/../modelsim.ini to modelsim.ini.
#          Updated modelsim.ini.
# 
# vcom -93 -work work {C:/altera/13.0sp1/somadorbits/somadorbits.vhd}
# Model Technology ModelSim ALTERA vcom 10.1d Compiler 2012.11 Nov  2 2012
# -- Loading package STANDARD
# -- Loading package TEXTIO
# -- Loading package std_logic_1164
# -- Compiling entity somadorbits
# -- Compiling architecture Q of somadorbits
# vcom -93 -work work {C:/altera/13.0sp1/somadorbits/fa.vhd}
# Model Technology ModelSim ALTERA vcom 10.1d Compiler 2012.11 Nov  2 2012
# -- Loading package STANDARD
# -- Loading package TEXTIO
# -- Loading package std_logic_1164
# -- Compiling entity FA
# -- Compiling architecture sumbit of FA
# 
vsim work.somadorbits(q)
# vsim work.somadorbits(q) 
# Loading std.standard
# Loading std.textio(body)
# Loading ieee.std_logic_1164(body)
# Loading work.somadorbits(q)
# Loading work.fa(sumbit)
wave create -driver freeze -pattern counter -startvalue 0000 -endvalue 1111 -type Range -direction Up -period 50ps -step 1 -repeat forever -range 3 0 -starttime 0ps -endtime 1000ps sim:/somadorbits/A
wave create -driver freeze -pattern counter -startvalue 0000 -endvalue 1111 -type Range -direction Up -period 50ps -step 5 -repeat forever -range 3 0 -starttime 0ps -endtime 1000ps sim:/somadorbits/B
add wave -position end  sim:/somadorbits/S
restart
run -all
